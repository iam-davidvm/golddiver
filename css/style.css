:root {
    --ff-display: 'Yeseva One', cursive;
    --ff-body: 'Montserrat', sans-serif;
    --clr-dark-gray: hsl(0, 0%, 13%);
    --clr-gold: hsl(46, 65%, 52%);
    --clr-light-blue: hsl(204, 64%, 44%);
    --clr-off-white: hsl(210, 50%, 98%);
}

*,
::before,
::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body  {
    font-family: var(--ff-body);
}

header {
    position: relative;
    width: 100%;
    background-color: var(--clr-dark-gray);
    color: var(--clr-gold);
    padding: 15px 0;
}

.logo {
    width: 100%;
}

.logo h1 {
    width: 100%;
    text-align: center;
    /* the gear icons also takes a specific space */
    padding-right: 21px;
    font-family: var(--ff-display);
    font-weight: 400;
    font-size: 1.8rem;
}

nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: 10px;
}

.settings {
    background-color: transparent;
    border: none;
    font-size: 1.2rem;
    color: var(--clr-gold);
    cursor: pointer;
}

.settings:hover {
    animation: rotate 2s linear;
    animation-iteration-count: infinite;
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(359deg);
    }
}

main {
    background-color: var(--clr-light-blue);
    min-height: calc(100vh - 63px);
    display: flex;
    place-content: center;
    align-items: center;
}

.game {
    padding: 25px 0;
}

.game-guess {
    text-align: center;
    font-family: var(--ff-display);
    color: var(--clr-off-white);
    font-size: 1.25rem;
    margin-bottom: 20px;
}

.game-49 .game-frame {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    grid-template-rows: repeat(7, 1fr);
    border: 5px solid var(--clr-gold);
}

.game-100 .game-frame {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    grid-template-rows: repeat(10, 1fr);
    border: 5px solid var(--clr-gold);
}

.game-49 .game-tile,
.game-100 .game-tile {
    width: 62px;
    height: 62px;
}

.game-open-tile {
    border: 0.5px dotted var(--clr-off-white);
    background: url(../imgs/water.jpg) center / cover no-repeat;
    cursor: pointer;
}

.game-bad-tile {
    background-color: transparent;
    background: url(../imgs/skull.svg) center / 80% 80% no-repeat;
    transform: rotateY(180deg);
}

/* the game-open-tile should be visible for 2 seconds and do a flip animation, then it dissapears and there is the 2s flip of the pot */
.game-pot-tile {
    background-color: var(--clr-light-blue);
    background: url(../imgs/chest.svg) center / 80% 80% no-repeat;
    transform: rotateY(180deg);
}

.turn-front {
    animation: turnFront 600ms ease-in;
}

@keyframes turnFront {
    from {
        transform: rotateY(0deg);
    }
    to {
        transform: rotateY(90deg);
    }
}

.turn-back {
    animation: turnBack 600ms ease-out;
}


@keyframes turnBack {
    from {
        transform: rotateY(90deg);
    }
    to {
        transform: rotateY(180deg);
    }
}

/* modal */

.modal {
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: hsla(0, 0%, 0%, 0.4);
    display: flex;
    align-items: center;
    place-content: center;
}

.modal-box {
    max-width: 600px;
    width: 90%;
    color: var(--clr-gold);
    background-color: var(--clr-dark-gray);
    padding: 10px 20px 15px;
    border-radius: 2em;
    box-shadow: hsl(210, 50%, 98%, 0.2) 0px 0px 5px 2px;
    position: relative;
}

.modal-close {
    position: absolute;
    right: 25px;
    top: 15px;
    cursor: pointer;
}

.modal-box h2 {
    text-align: center;
    text-transform: uppercase;
    font-size: 1.2rem;
}

.modal-box h3 {
    margin-top: 1.8em;
    font-size: 1.1rem;
}

.modal-box p {
    font-size: .9rem;
    line-height: 1.4;
    margin-bottom: 1.2em;
}

.modal-title {
    margin-bottom: 20px;
}

.modal-box button {
    background-color: var(--clr-gold);
    border: 1px solid var(--clr-gold);
    font-family: var(--ff-body);
    font-weight: 700;
    font-size: 1rem;
    color: var(--clr-dark-gray);
    text-transform: uppercase;
    padding: .8em 3em;
    margin: 50px auto 0;
    border-radius: 1.3em;
    display: block;
    cursor: pointer;
    transition: background-color 200ms ease-in, color 200ms ease-in;
}

.modal-box button:hover,
.modal-box button:focus {
    background-color: transparent;
    color: var(--clr-gold);
}

.modal-info-button button {
    margin: 50px auto 30px;
}

.modal-settings-radio {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    width: 50%;
    min-width: 270px;
}

.modal-settings-radio-option label {
    display: block;
    position: relative;
    cursor: pointer;
    font-weight: 700;
    padding-left: 30px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.modal-settings-radio-option input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.radiobutton {
    position: absolute;
    top: 0;
    left: 0;
    height: 20px;
    width: 20px;
    border: 1px solid var(--clr-gold);
    border-radius: 50%;
}

.modal-settings-radio-option label:hover input ~ .radiobutton {
    background-color: hsla(46, 65%, 52%, .5);
}

.modal-settings-radio-option label:hover checked ~ .radiobutton {
    background-color: transparent;
}

.radiobutton:after {
    content: "";
    position: absolute;
    display: none;
}

.modal-settings-radio-option label input:checked ~ .radiobutton:after {
    display: block;
}

.modal-settings-radio-option label .radiobutton:after {
    top: 5px;
    left: 5px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--clr-gold);
}

.modal-settings-button {
    margin-bottom: 30px;
}

.modal-settings-disclaimer {
    text-align: center;
    color: var(--clr-off-white);
}

.modal-settings-disclaimer p {   
    font-size: .75rem;
    margin-bottom: 0;
}

.modal-stats-outcome p {
    text-transform: uppercase;
    color: var(--clr-off-white);
    font-weight: 700;
    font-size: 1.1rem;
}

.modal-stats-games p {
    margin-bottom: .5rem;
    font-size: 1.1rem;
}

.modal-stats-guess {
    margin-bottom: 1.5rem;
}

.modal-stats-guess h3 {
    margin-bottom: 1rem;
}

.modal-stats-bar p,
.modal-stats-bar div {
    display: inline-block;
}

.modal-stats-bar p {
    margin-bottom: .4rem;
    width: 12px;
}

.modal-stats-bar div {
    position: relative;
    background-color: var(--clr-gold);
    height: 15px;
    margin-left: 5px;
}

.modal-stats-bar div::after {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    height: 5px;
    width: 100%;;
    background-color: var(--clr-dark-gray);
}

.modal-stats-one-bar,
.modal-stats-two-bar,
.modal-stats-three-bar {
    position: relative;
    
}

.modal-stats-one-bar span,
.modal-stats-two-bar span,
.modal-stats-three-bar span {
    position: absolute;
    color: var(--clr-dark-gray);
    display: block;
    font-size: .8rem;
    padding-top: 3px;
    right: 5px;

}

.modal-reveal {
    animation: reveal 300ms ease-in-out;
}

@keyframes reveal {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}


.d-none {
    display: none;
}

/* end of modal */

@media (max-width: 660px) {
    .game-100 .game-tile {
        width: 52px;
        height: 52px;
    }
}

@media (max-width: 550px) {
    .game-100 .game-tile {
        width: 42px;
        height: 42px;
    }
    .game-49 .game-tile {
        width: 52px;
        height: 52px;
    }
}

@media (max-width: 450px) {
    .game-100 .game-tile {
        width: 62px;
        height: 62px;
    }
    .game-100 .game-frame {
        grid-template-columns: repeat(5, 1fr);
        grid-template-rows: repeat(20, 1fr);
    }
}

@media (max-width: 400px) {
    .game-49 .game-tile {
        width: 42px;
        height: 42px;
    }
}

@media (max-width: 325px) {
    .game-100 .game-tile {
        width: 42px;
        height: 42px;
    }

    .modal-settings-radio {
        grid-template-columns: 1fr;
    }
    .modal-settings-radio-option label {
        margin-bottom: 14px;
    }
    
    .game-49 .game-frame {
        grid-template-columns: repeat(5, 1fr);
        grid-template-rows: repeat(10, 1fr);
    }
}